stages:
  - build-toolchain
  - build-components
  - build-runtime

variables:
  TOOLCHAIN_IMAGE: $CI_REGISTRY/zeroth-robotics/openlch/openlch-runtime-sdk
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_SUBMODULE_PATHS: runtime/firmware/tpu-sdk-sg200x runtime/firmware/duo-sdk

.runner: &runner
  tags: 
    - linux-x64
  
.c-build: &c-build
  variables:
    TOOLCHAIN_PREFIX: /sdk/host/bin/riscv64-buildroot-linux-musl-
    SYSROOT: /sdk/host/riscv64-buildroot-linux-musl/sysroot
    CFLAGS: -mcmodel=medany -mabi=lp64d
    LDFLAGS: -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64
    TPU_SDK_DIR: ../tpu-sdk-sg200x

build-toolchain:
  <<: *runner
  stage: build-toolchain
  services:
    - docker:dind
  image: docker:latest
  
  script:
    - |
      if [ "$GITLAB_CI" != "false" ]; then
        echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
        docker pull $TOOLCHAIN_IMAGE:latest || true
      fi
    - docker build --progress=plain --cache-from $TOOLCHAIN_IMAGE:latest -t $TOOLCHAIN_IMAGE:latest -f runtime/toolchain-docker-img/Dockerfile .
    - |
      if [ "$GITLAB_CI" != "false" ]; then
        docker push $TOOLCHAIN_IMAGE:latest
      fi
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - runtime/toolchain-docker-img/**/*
        - .gitlab-ci.yml

build-cviwrapper:
  <<: *runner
  <<: *c-build
  stage: build-runtime
  image: $TOOLCHAIN_IMAGE:latest
  script:
    - cd runtime/firmware/cviwrapper
    - make
  artifacts:
    paths:
      - runtime/firmware/cviwrapper/libcviwrapper.so
    expire_in: 1 week
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - runtime/**/*
        - .gitlab-ci.yml

build-servo:
  <<: *runner
  <<: *c-build
  stage: build-runtime
  image: $TOOLCHAIN_IMAGE:latest
  script:
    - cd runtime/firmware/feetech
    - make
  artifacts:
    paths:
      - runtime/firmware/feetech/libfeetech.so
    expire_in: 1 week
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - runtime/**/*
        - .gitlab-ci.yml

build-efuse:
  <<: *runner
  <<: *c-build
  stage: build-runtime
  image: $TOOLCHAIN_IMAGE:latest
  script:
    - cd runtime/firmware/efuse
    - make
  artifacts:
    paths:
      - runtime/firmware/efuse/efuse_read_serial
    expire_in: 1 week
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - runtime/**/*
        - .gitlab-ci.yml

# build-runtime:
#   <<: *runner
#   stage: build-runtime
#   image: $TOOLCHAIN_IMAGE:latest
#   needs:
#     - build-cviwrapper
#     - build-servo
#   script:
#     - cd runtime
#     - source /root/.cargo/env
#     - cargo +nightly build --features milkv --no-default-features --target riscv64gc-unknown-linux-musl -Zbuild-std --release

#   artifacts:
#     paths:
#       - runtime/target/riscv64gc-unknown-linux-musl/release/
#     exclude:
#       - runtime/target/riscv64gc-unknown-linux-musl/release/**/*.d
#       - runtime/target/riscv64gc-unknown-linux-musl/release/**/*.rlib
#       - runtime/target/riscv64gc-unknown-linux-musl/release/build
#       - runtime/target/riscv64gc-unknown-linux-musl/release/build/**/*
#       - runtime/target/riscv64gc-unknown-linux-musl/release/deps
#       - runtime/target/riscv64gc-unknown-linux-musl/release/deps/**/*
#       - runtime/target/riscv64gc-unknown-linux-musl/release/.fingerprint
#       - runtime/target/riscv64gc-unknown-linux-musl/release/.fingerprint/**/*
#       - runtime/target/riscv64gc-unknown-linux-musl/release/.cargo-lock
#     expire_in: 1 week
#   rules:
#     - if: $CI_PIPELINE_SOURCE == "push"
#       changes:
#         - runtime/**/*
#         - .gitlab-ci.yml

build-kos:
  <<: *runner
  stage: build-runtime
  needs:
    - build-cviwrapper
    - build-servo
  image: $TOOLCHAIN_IMAGE:latest
  variables:
    CC_riscv64gc_unknown_linux_musl: "/sdk/host/bin/riscv64-buildroot-linux-musl-gcc.br_real"
  script:
    - cd runtime/kos_platform
    - source /root/.cargo/env
    - cargo +nightly build --target riscv64gc-unknown-linux-musl -Zbuild-std --release
    - mv target/riscv64gc-unknown-linux-musl/release/kos-zeroth-01 target/riscv64gc-unknown-linux-musl/release/kos

  artifacts:
    paths:
      - runtime/kos_platform/target/riscv64gc-unknown-linux-musl/release/kos
    expire_in: 1 week
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - runtime/kos_platform/**/*
        - .gitlab-ci.yml
